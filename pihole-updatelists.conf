; Pi-hole's Lists Updater by Jack'lul
; https://github.com/jacklul/pihole-updatelists
; For a full list of available variables please see the readme.
; In case of domainlist below are category type
;        'WHITELIST'       => 0,
;        'REGEX_WHITELIST' => 2,
;        'BLACKLIST'       => 1,
;        'REGEX_BLACKLIST' => 3,

; Remote list URL containing list of adlists to import
; URLs to single adlists are not supported here!
ADLISTS_URL="https://github.com/aarakh/hosts/raw/master/adlists-url"

; Remote list URL containing exact domains to whitelist
WHITELIST_URL="https://github.com/aarakh/hosts/raw/master/whitelist-url"

; Remote list URL containing regex rules for whitelisting
REGEX_WHITELIST_URL="https://github.com/aarakh/hosts/raw/master/regex-whitelist-url"

; Remote list URL containing exact domains to blacklist
; This is specifically for handcrafted lists only, do not use regular blocklists here!
BLACKLIST_URL="https://github.com/aarakh/hosts/raw/master/blacklist-url"

; Remote list URL containing regex rules for blacklisting
REGEX_BLACKLIST_URL="https://github.com/aarakh/hosts/raw/master/regex-blacklist-url"

; Comment string used to know which entries were created by the script
; You can still add your own comments to individual entries as long you keep this string intact
COMMENT="Managed by pihole-updatelists"

; Assign additional group to all inserted entries, to assign only the specified group (do not add to the default) make the number negative
; 0 is the default group, you can view ID of the group in Pi-hole's web interface by hovering mouse cursor over group name field on the 'Group management' page
; Multiple groups are not supported
GROUP_ID=0

; Makes sure entries have the specified group assigned on each script run
; This does not prevent you from assigning more groups through the web interface but can remove entries from the default group if GROUP_ID is a negative number
; Do not enable this when you're running multiple different configurations
PERSISTENT_GROUP=false

; Prevent touching entries not created by this script by comparing comment field
; When false any user-created entry will be disabled, only those created by the script will be active
REQUIRE_COMMENT=true

; Update gravity after lists are updated? (runs pihole updateGravity)
; When false invokes lists reload instead
; Set to null to do nothing
UPDATE_GRAVITY=true

; Show more information while the script is running
VERBOSE=false

; Show debug messages for troubleshooting purposes
; If you're having issues - this might help tracking it down
DEBUG=false

; Maximum time in seconds one list download can take before giving up
; You should increase this when downloads fail because of timeout
DOWNLOAD_TIMEOUT=60

; Ignore download failures when using multiple lists
; This will cause entries from the lists that failed to download to be disabled
IGNORE_DOWNLOAD_FAILURE=false

; Path to gravity.db in case you need to change it
GRAVITY_DB="/etc/pihole/gravity.db"

; Process lockfile to prevent multiple instances of the script from running
; You shouldn't change it - unless /var/lock is unavailable
LOCK_FILE="/var/lock/pihole-updatelists.lock"

; Log console output to file
; In most cases you don't have to set this as you can view full log in the system journal
; Put - before path to overwrite file instead of appending to it
LOG_FILE="/var/log/pihole-updatelists.log"

; Branch to pull remote checksum and update from
GIT_BRANCH="master"